plugins {
  id "java"
  id "org.springframework.boot" version "2.7.5"
  id "io.spring.dependency-management" version "1.1.2"

  // Code quality plugins
  id "checkstyle"
  id "jacoco"
  id "org.sonarqube" version "4.3.0.3225"
}

group = "uk.nhs.hee.tis.trainee"
version = "1.2.0"

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

dependencyManagement {
  imports {
    mavenBom("io.awspring.cloud:spring-cloud-aws-dependencies:3.0.2")
  }
}

dependencies {
  // Spring Boot starters
  implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
  implementation "org.springframework.boot:spring-boot-starter-actuator"
  implementation "org.springframework.boot:spring-boot-starter-validation"
  implementation "org.springframework.boot:spring-boot-starter-web"
  implementation "org.springframework.boot:spring-boot-starter-cache"
  implementation "org.springframework.boot:spring-boot-starter-data-redis"
  testImplementation "org.springframework.boot:spring-boot-starter-test"

  // Lombok
  compileOnly "org.projectlombok:lombok"
  annotationProcessor "org.projectlombok:lombok"

  // MapStruct
  ext.mapstructVersion = "1.5.5.Final"
  implementation "org.mapstruct:mapstruct:${mapstructVersion}"
  annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
  testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

  // Sentry reporting
  implementation "io.sentry:sentry-spring-boot-starter:6.28.0"

  // Required to support PATCH requests.
  implementation "org.apache.httpcomponents:httpclient:4.5.14"

  // Amazon SQS
  implementation "io.awspring.cloud:spring-cloud-starter-aws"
  implementation "io.awspring.cloud:spring-cloud-starter-aws-messaging"

  implementation "org.springframework.cloud:spring-cloud-starter-bootstrap"

  ext.testContainersVersion = "1.18.3"
  testImplementation "org.springframework.cloud:spring-cloud-starter"
  testImplementation "org.springframework.cloud:spring-cloud-contract-wiremock"
  testImplementation "org.testcontainers:testcontainers:${testContainersVersion}"
  testImplementation "org.testcontainers:junit-jupiter:${testContainersVersion}"

  ext.playtikaTestContainersVersion = "2.3.2"
  testImplementation "com.playtika.testcontainers:embedded-redis:${playtikaTestContainersVersion}"
  testImplementation "com.playtika.testcontainers:embedded-mongodb:${playtikaTestContainersVersion}"
}
ext {
  set('springCloudVersion', "2021.0.3")
}
dependencyManagement {
  imports {
    mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
  }
}

checkstyle {
  config = resources.text.fromArchiveEntry(configurations.checkstyle[0], "google_checks.xml")
}

jacocoTestReport {
  reports {
    html.required = true
    xml.required = true
  }
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
    vendor = JvmVendorSpec.ADOPTIUM
  }
}

sonarqube {
  properties {
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.login", System.getenv("SONAR_TOKEN")
    property "sonar.organization", "health-education-england"
    property "sonar.projectKey", "Health-Education-England_tis-trainee-sync"

    property "sonar.java.checkstyle.reportPaths",
      "build/reports/checkstyle/main.xml,build/reports/checkstyle/test.xml"
  }
}

test {
  finalizedBy jacocoTestReport
  useJUnitPlatform()
}
